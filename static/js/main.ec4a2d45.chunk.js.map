{"version":3,"sources":["components/DrumPads/Button.js","components/DrumPads/soundData.js","components/DrumPads/DrumPads.js","components/ControlPanel/Display.js","components/ControlPanel/Settings/Switch.js","components/ControlPanel/Settings/VolumeSlider.js","components/ControlPanel/Settings/Settings.js","components/ControlPanel/ControlPanel.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["Pad","styled","div","_templateObject","Button","id","this","props","data","src","name","react_default","a","createElement","className","onClick","handleDrumClick","preload","Component","soundData","Grid","DrumPads_templateObject","DrumPads","_this","bank","map","btnData","DrumPads_Button","key","Dsp","Display_templateObject","switchedOn","Display","Toggle","input","Switch_templateObject","Label","_templateObject2","Wrapper","_templateObject3","Switch","labelLeft","type","onChange","handleChange","labelRight","Slider","VolumeSlider_templateObject","sliderStyle","width","outline","VolumeSlider","min","max","defaultValue","step","style","SettingsWrapper","Settings_templateObject","Settings","Settings_Switch","handlePowerSwitch","Settings_VolumeSlider","handleVolumeChange","handleBankSwitch","PanelWrapper","ControlPanel_templateObject","ControlPanel","ControlPanel_Display","ControlPanel_Settings_Settings","App_templateObject","Drum","App_templateObject2","Controls","App_templateObject3","Pads","_templateObject4","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","volume","bind","assertThisInitialized","handleKeyDown","tests","document","async","body","appendChild","addEventListener","removeEventListener","event","audio","getElementById","toUpperCase","playSound","target","firstElementChild","setState","parentElement","pause","currentTime","play","message","newBank","slider","valueAsNumber","App_Wrapper","href","rel","components_DrumPads_DrumPads","components_ControlPanel_ControlPanel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","injectGlobal","src_templateObject","ReactDOM","render","containers_App","URL","process","origin","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ec4a2d45.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Pad = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ddd;\r\n  box-shadow: 2px 1px 5px #666;\r\n  border-radius: 3px;\r\n`\r\n\r\nclass Button extends Component {\r\n  render () {\r\n    const id = this.props.data.id\r\n    const src = this.props.data.src\r\n    const name = this.props.data.name\r\n    return (\r\n      <Pad className=\"drum-pad\" onClick={this.props.handleDrumClick} id={name}>\r\n        {id}\r\n        <audio src={src} id={id} className=\"clip\" preload=\"auto\" />\r\n      </Pad>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button\r\n","const soundData = [\r\n  [\r\n    {\r\n      id: 'Q',\r\n      name: 'Heater-1',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n    },\r\n    {\r\n      id: 'W',\r\n      name: 'Heater-2',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n    },\r\n    {\r\n      id: 'E',\r\n      name: 'Heater-3',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n    },\r\n    {\r\n      id: 'A',\r\n      name: 'Heater-4',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n    },\r\n    {\r\n      id: 'S',\r\n      name: 'Clap',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n    },\r\n    {\r\n      id: 'D',\r\n      name: 'Open-HH',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n    },\r\n    {\r\n      id: 'Z',\r\n      name: \"Kick-n'-Hat\",\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n    },\r\n    {\r\n      id: 'X',\r\n      name: 'Kick',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n    },\r\n    {\r\n      id: 'C',\r\n      name: 'Closed-HH',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      id: 'Q',\r\n      name: 'Chord-1',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n    },\r\n    {\r\n      id: 'W',\r\n      name: 'Chord-2',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n    },\r\n    {\r\n      id: 'E',\r\n      name: 'Chord-3',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n    },\r\n    {\r\n      id: 'A',\r\n      name: 'Shaker',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n    },\r\n    {\r\n      id: 'S',\r\n      name: 'Open-HH',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n    },\r\n    {\r\n      id: 'D',\r\n      name: 'Closed-HH',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n    },\r\n    {\r\n      id: 'Z',\r\n      name: 'Punchy-Kick',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n    },\r\n    {\r\n      id: 'X',\r\n      name: 'Side-Stick',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n    },\r\n    {\r\n      id: 'C',\r\n      name: 'Snare',\r\n      src: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n    }\r\n  ]\r\n]\r\n\r\nexport default soundData\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './Button'\r\nimport soundData from './soundData.js'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 18px;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  border-radius: 12px 0 0 12px;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  padding: 12px;\r\n`\r\n\r\nclass DrumPads extends Component {\r\n  render () {\r\n    return (\r\n      <Grid>\r\n        {soundData[this.props.bank].map(btnData => {\r\n          return (\r\n            <Button key={btnData.id} data={btnData} handleDrumClick={this.props.handleDrumClick} />\r\n          )\r\n        })}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DrumPads\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Dsp = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 20px;\r\n  background-color: ${props => (props.switchedOn ? 'Chartreuse' : 'green')};\r\n  transition: background-color 0.06s ease-in-out;\r\n  font-family: 'Orbitron', sans-serif;\r\n  font-size: 1.5em;\r\n  border-radius: 4px;\r\n`\r\n\r\nclass Display extends Component {\r\n  render () {\r\n    return (\r\n      <Dsp switchedOn={this.props.switchedOn} id=\"display\">\r\n        {this.props.name}\r\n      </Dsp>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Display\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Toggle = styled.input`\r\n  & {\r\n    appearance: none;\r\n    width: 6em;\r\n    height: 3em;\r\n    border-radius: 3em;\r\n    background-color: #bbb;\r\n    outline: 0;\r\n    cursor: pointer;\r\n    transition: background-color 0.09s ease-in-out;\r\n    position: relative;\r\n  }\r\n  &:after {\r\n    content: '';\r\n    width: 3em;\r\n    height: 3em;\r\n    border-radius: 3em;\r\n    background-color: white;\r\n    position: absolute;\r\n    transform: scale(0.8);\r\n    left: 0;\r\n    transition: left 0.09s ease-in-out;\r\n  }\r\n  &:checked {\r\n    background-color: #a44;\r\n  }\r\n  &:checked:after {\r\n    left: 3em;\r\n  }\r\n`\r\n\r\nconst Label = styled.div`\r\n  font-size: 1em;\r\n  color: white;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`\r\n\r\nclass Switch extends Component {\r\n  render () {\r\n    return (\r\n      <Wrapper>\r\n        <Label>{this.props.labelLeft}</Label>\r\n        <div>\r\n          <Toggle type=\"checkbox\" onChange={this.props.handleChange} />\r\n        </div>\r\n        <Label>{this.props.labelRight}</Label>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Switch\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Slider = styled.div`\r\n  background-color: brown;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst sliderStyle = {\r\n  width: '200px',\r\n  outline: 'none'\r\n}\r\n\r\nclass VolumeSlider extends Component {\r\n  render () {\r\n    return (\r\n      <Slider>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          defaultValue=\"0.5\"\r\n          step=\"0.01\"\r\n          onChange={this.props.handleChange}\r\n          style={sliderStyle}\r\n        />\r\n      </Slider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VolumeSlider\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport Switch from './Switch'\r\nimport VolumeSlider from './VolumeSlider'\r\n\r\nconst SettingsWrapper = styled.div`\r\n  background-color: #666;\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n  grid-template-columns: 1fr;\r\n`\r\n\r\nclass Settings extends Component {\r\n  render () {\r\n    return (\r\n      <SettingsWrapper>\r\n        <Switch handleChange={this.props.handlePowerSwitch} labelLeft=\"Off\" labelRight=\"On\" />\r\n        <VolumeSlider handleChange={this.props.handleVolumeChange} />\r\n        <Switch handleChange={this.props.handleBankSwitch} labelLeft=\"Bank 1\" labelRight=\"Bank 2\" />\r\n      </SettingsWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport Display from './Display'\r\nimport Settings from './Settings/Settings'\r\n\r\nconst PanelWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 120px 1fr;\r\n  grid-template-columns: 1fr;\r\n  background-color: brown;\r\n  border: 1px solid white;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nclass ControlPanel extends Component {\r\n  render () {\r\n    return (\r\n      <PanelWrapper>\r\n        <Display switchedOn={this.props.switchedOn} name={this.props.name} />\r\n        <Settings\r\n          handlePowerSwitch={this.props.handlePowerSwitch}\r\n          handleBankSwitch={this.props.handleBankSwitch}\r\n          handleVolumeChange={this.props.handleVolumeChange}\r\n        />\r\n      </PanelWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ControlPanel\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport DrumPads from '../components/DrumPads/DrumPads'\r\nimport ControlPanel from '../components/ControlPanel/ControlPanel'\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: url('https://s26.postimg.cc/je8d10p7d/man-rock-record-music-vinyl-vintage-retro-old-male-equipment-ele.jpg');\r\n  background-size: cover;\r\n  border-radius: 22px;\r\n  border: 7px solid white;\r\n`\r\n\r\nconst Drum = styled.div`\r\n  width: 640px;\r\n  height: 330px;\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-areas: 'pads controls';\r\n  grid-gap: 26px;\r\n  border: 1px solid white;\r\n  border-radius: 12px;\r\n  background: url('https://s26.postimg.cc/3x00onm9l/steel_surface_Small.jpg');\r\n  background-size: cover;\r\n  box-shadow: 8px 10px 35px -3px #111;\r\n  padding: 22px 22px 22px 22px;\r\n\r\n  @media (max-width: 800px) {\r\n    height: 640px;\r\n    width: 280px;\r\n    grid-template-rows: 1fr 1fr;\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas: 'controls'\r\n    'pads';\r\n  }\r\n`\r\n\r\nconst Controls = styled.div`\r\n  grid-area: controls;\r\n  margin: 0;\r\n  height: 100%;\r\n`\r\nconst Pads = styled.div`\r\n  grid-area: pads;\r\n  height: 100%;\r\n`\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      name: '',\r\n      switchedOn: false,\r\n      volume: 0.5,\r\n      bank: 0\r\n    }\r\n    this.handleDrumClick = this.handleDrumClick.bind(this)\r\n    this.handlePowerSwitch = this.handlePowerSwitch.bind(this)\r\n    this.handleBankSwitch = this.handleBankSwitch.bind(this)\r\n    this.handleVolumeChange = this.handleVolumeChange.bind(this)\r\n    this.handleKeyDown = this.handleKeyDown.bind(this)\r\n  }\r\n  // includes freeCodeCamp test suite\r\n  componentDidMount () {\r\n    const tests = document.createElement('script')\r\n    tests.src = 'https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js'\r\n    tests.async = true\r\n    document.body.appendChild(tests)\r\n  }\r\n  // event listeners for keyboard control\r\n  componentWillMount () {\r\n    document.addEventListener('keydown', this.handleKeyDown)\r\n  }\r\n  componentWillUnmount () {\r\n    document.removeEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  handleKeyDown (event) {\r\n    let key = event.key;\r\n    if (key) {\r\n      // only process truthy values for key name (avoid problems with test suite)\r\n      if (key === 'y') { // for european keyboards\r\n        key = 'z';\r\n      }\r\n      const audio = document.getElementById(key.toUpperCase())\r\n      if (audio) {\r\n        // an element with the id of the pressed key name actually exists\r\n        this.playSound(audio)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDrumClick (event) {\r\n    const audio = event.target.firstElementChild\r\n    this.playSound(audio)\r\n  }\r\n\r\n  playSound (audio) {\r\n    if (this.state.switchedOn) {\r\n      this.setState({ name: audio.parentElement.id })\r\n      audio.volume = this.state.volume\r\n      audio.pause()\r\n      audio.currentTime = 0\r\n      audio.play()\r\n    }\r\n  }\r\n\r\n  handlePowerSwitch () {\r\n    const message = this.state.switchedOn ? '' : 'Jam away!'\r\n    this.setState({ name: message }) // show welcome message after switching on\r\n    this.setState({ switchedOn: !this.state.switchedOn })\r\n  }\r\n\r\n  handleBankSwitch () {\r\n    const newBank = 1 - this.state.bank // toggles between 0 and 1\r\n    this.setState({ bank: newBank })\r\n  }\r\n\r\n  handleVolumeChange (event) {\r\n    const slider = event.target\r\n    this.setState({ volume: slider.valueAsNumber })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Wrapper>\r\n        <link href=\"https://fonts.googleapis.com/css?family=Orbitron\" rel=\"stylesheet\" />\r\n        <Drum id=\"drum-machine\">\r\n          <Pads>\r\n            <DrumPads handleDrumClick={this.handleDrumClick} bank={this.state.bank} />\r\n          </Pads>\r\n          <Controls>\r\n            <ControlPanel\r\n              switchedOn={this.state.switchedOn}\r\n              name={this.state.name}\r\n              handlePowerSwitch={this.handlePowerSwitch}\r\n              handleBankSwitch={this.handleBankSwitch}\r\n              handleVolumeChange={this.handleVolumeChange}\r\n            />\r\n          </Controls>\r\n        </Drum>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './containers/App'\r\nimport registerServiceWorker from './registerServiceWorker'\r\n\r\nimport { injectGlobal } from 'styled-components'\r\n\r\ninjectGlobal`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: sans-serif;\r\n  }\r\n`\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\nregisterServiceWorker()\r\n"],"sourceRoot":""}